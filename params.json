{"name":"wlan-decoder-java","tagline":"WLAN 802.11 decoder in Java","body":"# Wlan 802.11 Decoder in Java #\r\n\r\nhttp://akinaru.github.io/wlan-decoder-java/\r\n\r\n<i>Last update 04/05/2015</i>\r\n\r\nDecoder for Wlan 802.11 frame preceding with Radiotap header or not\r\n\r\nRadiotap header are parsed with project http://akinaru.github.io/pcapng-decoder-java/\r\n\r\nAll type of Wlan 802.11 frames are parsed :\r\n * MANAGEMENT_FRAME_TYPE\r\n * CONTROL_FRAME_TYPE\r\n * DATA_FRAME_TYPE\r\n\r\nBut there are a few of \"information element\" block parsed for now (tagged parameters) :\r\n* SSID\r\n* HT CAPABILITIES\r\n* SUPPORTED RATE\r\n* TIM\r\n* EXTENDED SUPPORTED RATE\r\n* ERP\r\n* DSSS PARAMETER\r\n\r\nIt lacks a lot of informations element that will be implemented later \r\n\r\n<hr/>\r\n\r\n<b>USAGE</b>\r\n\r\nThe following usage show how to decode a Wlan 802.11 frame preceding with Radiotap frames.\r\n\r\nYou can also decode only wlan802.11 frames if you dont have radiotap header before\r\n\r\nFirst you need a pcapng file containing :\r\n * your wlan 802.11 frames preceding with radiotap frames\r\n * Or your wlan 802.11 frames only\r\n \r\nYou can use to parse this file \r\n* the jnetpcap library \r\n* my own lib in http://akinaru.github.io/pcapng-decoder-java/ (pcapng-decoder-java)\r\n\r\nYou dont have to take the jar to you it is already in lib folder\r\n\r\nSo basically this project use 2 external libs pcapngdecoder.jar and radiotapdecoder.jar\r\n\r\n<hr/>\r\n\r\n<b>COMMAND LINE SYNTAX</b> \r\n\r\n``java -cp ../libs/pcapngdecoder-1.0.jar:../libs/radiotapdecoder-1.0.jar:wlandecoder-1.0.jar fr.bmartel.wlandecoder.DecodeMain -f ../pcapfile/exemple.pcapng  -v``\r\n\r\n-f <file.pcapng> : input file\r\n\r\n-v               : verbose, will show all section parsing content\r\n\r\nThis exemple is launched from release folder\r\n\r\n<hr/>\r\n\r\n<b>PROGRAM SYNTAX for parsing Wlan802.11 frames preceding with radiotap header</b>\r\n\r\n``byte[] wlanDataPrecedingWithRadiotapHeader = packet.getPacketData();``\r\n\r\n``WlanDecoder dataDecode = new WlanDecoder(packet.getPacketData());``\r\n\r\n``dataDecode.decodeWithRadiotap();``\r\n\r\n``wlanDecodedFrameList.add(dataDecode);``\r\n\r\nYou can retrieve radiotap data too if you want. Go check http://akinaru.github.io/radiotap-decoder-java/ for more precision\r\n\r\n<b>PROGRAM SYNTAX for parsing Wlan802.11 frames ONLY</b>\r\n\r\n``byte[] wlanDataPrecedingWithRadiotapHeader = packet.getPacketData();``\r\n\r\n``WlanDecoder dataDecode = new WlanDecoder(packet.getPacketData());``\r\n\r\n``dataDecode.decode();``\r\n\r\n``wlanDecodedFrameList.add(dataDecode);``\r\n\r\n# Output example\r\n\r\n\r\nWlan frame control<br/>\r\n-------protocolVersion   : 0<br/>\r\n-------type              : 0<br/>\r\n-------subType           : 8<br/>\r\n-------toDS              : false<br/>\r\n-------fromDS            : false<br/>\r\n-------moreFragmentation : false<br/>\r\n-------retry             : false<br/>\r\n-------powerManagement   : false<br/>\r\n-------moreData          : false<br/>\r\n-------wep               : false<br/>\r\n-------order             : false<br/>\r\nWlan management frame<br/>\r\n-------duration id     : 00 | 00<br/>\r\n-------destinationAddr : FF | FF | FF | FF | FF | FF<br/>\r\n-------sourceAddr      : 00 | 24 | D4 | 6B | 0C | 5D<br/>\r\n-------bssid           : 00 | 24 | D4 | 6B | 0C | 5D<br/>\r\n-------sequenceControl : 00 | E5<br/>\r\n-------frameBody       : 60 | 01 | 25 | DE | 32 | 03 | 00 | 00 | 60 | 00 | 01 | 04 | 00 | 08 | 46 | 72 | 65 | 65 | 57 | 69 | 66 | 69 | 01 | 08 | 82 | 84 | 8B | 96 | 2C | 0C | 12 | 18 | 03 | 01 | 0C | 05 | 04 | 00 | 02 | 00 | 00 | 2A | 01 | 04 | 32 | 05 | 24 | 30 | 48 | 60 | 6C | 2D | 1A | 6C | 00 | 03 | FF | FF | FF | 00 | 01 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 01 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 3D | 16 | 0C | 00 | 13 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 7F | 08 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 40 | DD | 18 | 00 | 50 | F2 | 02 | 01 | 01 | 00 | 00 | 03 | A4 | 00 | 00 | 27 | A4 | 00 | 00 | 42 | 43 | 5E | 00 | 62 | 32 | 2F | 00<br/>\r\n-------fcs             : A3 | 26 | 13 | 07<br/>\r\n-------MANAGEMENT BEACON FRAME<br/>\r\n--------------timestamp              : 00 | 00 | 03 | 32 | DE | 25 | 01 | 60<br/>\r\n--------------beaconInterval         : 96<br/>\r\n--------------capability information : 04 | 01<br/>\r\n---------------------Dynamic Elements<br/>\r\n---------------------element id : 0<br/>\r\n----------------------------SSID : FreeWifi<br/>\r\n---------------------Dynamic Elements<br/>\r\n---------------------element id : 1<br/>\r\n----------------------------data rates supported :<br/> 1000kbps,2000kbps,5500kbps,11000kbps,22000kbps,6000kbps,9000kbps,12000kbps,<br/>\r\n---------------------Dynamic Elements<br/>\r\n---------------------element id : 3<br/>\r\n----------------------------currentChannel : 12<br/>\r\n----------------------------frequency      : -1<br/>\r\n---------------------Dynamic Elements<br/>\r\n---------------------element id : 5<br/>\r\n----------------------------number of beacon frame before next DTIM  : 0<br/>\r\n----------------------------number of beacon interval between 2 DTIM : 2<br/>\r\n----------------------------TIM bitmapControl                        : 0<br/>\r\n----------------------------TIM partialVirtualBitmap : 00 | <br/>\r\n---------------------Dynamic Elements<br/>\r\n---------------------element id : 42<br/>\r\n----------------------------isErpPresent         : false<br/>\r\n----------------------------useProtection        : false<br/>\r\n----------------------------isBarkerPreambleMode : true<br/>\r\n---------------------Dynamic Elements<br/>\r\n---------------------element id : 50<br/>\r\n----------------------------extended data rates supported : 18000kbps,24000kbps,36000kbps,48000kbps,54000kbps,<br/>\r\n---------------------Dynamic Elements<br/>\r\n---------------------element id : 45<br/>\r\n----------------------------support short 20Mhz           : true<br/>\r\n----------------------------support short 40Mhz           : true<br/>\r\n----------------------------channel width 20MHz supported : false<br/>\r\n----------------------------channel width 40MHz supported : true<br/>\r\n----------------------------AMPDU paramters               : 3<br/>\r\n----------------------------MCS Supported : n°0-BPSK<br/>\r\n----------------------------MCS Supported : n°1-QPSK<br/>\r\n----------------------------MCS Supported : n°2-QPSK<br/>\r\n----------------------------MCS Supported : n°3-16-QAM<br/>\r\n----------------------------MCS Supported : n°4-16-QAM<br/>\r\n----------------------------MCS Supported : n°5-64-QAM<br/>\r\n----------------------------MCS Supported : n°6-64-QAM<br/>\r\n----------------------------MCS Supported : n°7-64-QAM<br/>\r\n----------------------------MCS Supported : n°8-BPSK<br/>\r\n----------------------------MCS Supported : n°9-QPSK<br/>\r\n----------------------------MCS Supported : n°10-QPSK<br/>\r\n----------------------------MCS Supported : n°11-16-QAM<br/>\r\n----------------------------MCS Supported : n°12-16-QAM<br/>\r\n----------------------------MCS Supported : n°13-64-QAM<br/>\r\n----------------------------MCS Supported : n°14-64-QAM<br/>\r\n----------------------------MCS Supported : n°15-64-QAM<br/>\r\n----------------------------MCS Supported : n°16-BPSK<br/>\r\n----------------------------MCS Supported : n°17-QPSK<br/>\r\n----------------------------MCS Supported : n°18-QPSK<br/>\r\n----------------------------MCS Supported : n°19-16-QAM<br/>\r\n----------------------------MCS Supported : n°20-16-QAM<br/>\r\n----------------------------MCS Supported : n°21-64-QAM<br/>\r\n----------------------------MCS Supported : n°22-64-QAM<br/>\r\n----------------------------MCS Supported : n°23-64-QAM<br/>\r\n----------------------------HT Extended capabilities           : 00 | 00<br/>\r\n----------------------------Transmit beam forming capabilities : 00 | 00 | 00 | 00<br/>\r\n----------------------------ASEL capabilities<br/>\r\n\r\n\r\nElement id not parsed will be displayed at the beginning of the output like this :\r\n* Element id not decoded => 61\r\n\r\n<hr/>\r\n\r\n* Project is JRE 1.7 compliant\r\n* You can build it with ant => build.xml\r\n* Development on Eclipse \r\n* Specification from http://www.radiotap.org\r\n","google":"UA-62569105-1","note":"Don't delete this file! It's used internally to help with page regeneration."}